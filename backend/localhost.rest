# https://marketplace.visualstudio.com/items?itemName=humao.rest-client

# Variables
@scheme = http
@host = localhost
@PORT = {{$dotenv PORT}} 
@baseUrl = {{scheme}}://{{host}}:{{PORT}}

# Dynamic Variables
@authToken = {{login.response.body.token}}
@authToken = {{signup.response.body.token}}

@userId = {{login.response.body.id}}
@userId = {{signup.response.body.id}}

### health check

GET {{baseUrl}}/health

### Signup - password length too short

# @name signup
POST {{baseUrl}}/api/v1/users/signup
Content-Type: application/json

{
    "name": "test",
    "email": "example@example.com",
    "password": "test123"
}

### successful signup

# @name signup
POST {{baseUrl}}/api/v1/users/signup
Content-Type: application/json

{
    "name": "test",
    "email": "example@example.com",
    "password": "CorrectHorseBatteryStaple"
}

### successful login

# @name login
POST {{baseUrl}}/api/v1/users/login
Content-Type: application/json

{
    "email": "example@example.com",
    "password": "CorrectHorseBatteryStaple"
}

### unsuccessful login - wrong password

# @name login
POST {{baseUrl}}/api/v1/users/login
Content-Type: application/json

{
    "email": "example@example.com",
    "password": "WrongPassword"
}

### unsuccessful login - wrong email

# @name login
POST {{baseUrl}}/api/v1/users/login
Content-Type: application/json

{
    "email": "foo@example.com",
    "password": "WrongPassword"
}

### get all users - unauthorized - no Authorization header

GET {{baseUrl}}/api/v1/users

### get all users - authorized

GET {{baseUrl}}/api/v1/users
Authorization: Bearer {{authToken}}

### get all users - unauthorized - malformed token

GET {{baseUrl}}/api/v1/users
Authorization: Bearer malformedToken

### get all users - unauthorized - no token

GET {{baseUrl}}/api/v1/users
Authorization: Bearer 

### get all users - unauthorized - expired token

GET {{baseUrl}}/api/v1/users
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJjMzE2MjExLWM5ZjQtNDM3Yy04MDQyLTllNWRjMGVlMWQxZSIsImVtYWlsIjoiZXhhbXBsZTJAZXhhbXBsZS5jb20iLCJpYXQiOjE2ODA1NDM1OTEsImV4cCI6MTY4MDU0NzE5MX0.ch7iKLKNluWKg_84dG9YALsA2RHpA7KGwfwyaXVeyhQ

### get user by id

GET {{baseUrl}}/api/v1/users/{{userId}}
Authorization: Bearer {{authToken}}

### get user by id - not found

GET {{baseUrl}}/api/v1/users/thisIsNotAnExistingUserId
Authorization: Bearer {{authToken}}

### get user by id - different user, not admin

GET {{baseUrl}}/api/v1/users/bbbbbbbb-f9e0-4047-99a5-6f0ed153ba89
Authorization: Bearer {{authToken}}

### login as admin

# @name loginAdmin
POST {{baseUrl}}/api/v1/users/login
Content-Type: application/json

{
    "email": "bob.johnson@example.com",
    "password": "bob.johnson"
}

### get user by id - different user, admin

GET {{baseUrl}}/api/v1/users/bbbbbbbb-f9e0-4047-99a5-6f0ed153ba89
Authorization: Bearer {{loginAdmin.response.body.token}}

### Create new user to be deleted

# @name signupToDelete
POST {{baseUrl}}/api/v1/users/signup
Content-Type: application/json

{
    "name": "test",
    "email": "to.delete@example.com",
    "password": "ui432oo3u42i"
}

### delete user by id

DELETE {{baseUrl}}/api/v1/users/{{signupToDelete.response.body.id}}
Authorization: Bearer {{signupToDelete.response.body.token}}

### update user by id

PATCH {{baseUrl}}/api/v1/users/{{signupToDelete.response.body.id}}
Authorization: Bearer {{signupToDelete.response.body.token}}
Content-Type: application/json

{
    "name": "New Name",
    "email": "adaaanew.email@example.com",
    "password": "adaaanew.email"
}

### get roles

GET {{baseUrl}}/api/v1/roles
Authorization: Bearer {{authToken}}

### get roles - unauthorized

GET {{baseUrl}}/api/v1/roles

### Forgot password - email not found

POST {{baseUrl}}/api/v1/password-reset/send-reset-email
Content-Type: application/json

{
    "email": "does.not.exist@example.com"
}

### Send forgot password

POST {{baseUrl}}/api/v1/password-reset/send-reset-email
Content-Type: application/json

{
    "email": "john.smith@example.com"
}

### Reset password - invalid token

POST {{baseUrl}}/api/v1/password-reset/set-new-password
Content-Type: application/json

{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhYWFhYWFhLTA2MTUtNGQwNC1hNzk1LTljNTc1NmVmNWY0YyIsImlhdCI6MTY4MTI0NTEyMywiZXhwIjoxNjgxMjQ2MjIzfQ.oh9fSC9MHyk5iX3ZuFoPsd6WXGF5laNg_ysyAULZ1ws", 
    "password": "newPassword"
}


### Reset password - expired

POST {{baseUrl}}/api/v1/password-reset/set-new-password
Content-Type: application/json

{
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhYWFhYWFhLTA2MTUtNGQwNC1hNzk1LTljNTc1NmVmNWY0YyIsImlhdCI6MTY4MTI0NTEyMywiZXhwIjoxNjgxMjQ2MzIzfQ.7O80aKMcONZ7ulFZgfd4tBOB3md4vDg0zG-7A8zTa-U", 
    "password": "newPassword"
}

